package view;

import java.util.ResourceBundle;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import util.Utils;

/**
 * @author Cesardl
 */
public class JFrameInit extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public JFrameInit() {
        initComponents();
    }

    public ResourceBundle getBundle() {
        return bundle;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        panelStudent = new view.JPanelStudent();
        panelTeacher = new view.JPanelTeacher();
        menuBar = new javax.swing.JMenuBar();
        menuActions = new javax.swing.JMenu();
        menuStudent = new javax.swing.JMenu();
        menuItemInsertStudent = new javax.swing.JMenuItem();
        menuItemUpdateStudent = new javax.swing.JMenuItem();
        menuItemDeleteStudent = new javax.swing.JMenuItem();
        menuTeacher = new javax.swing.JMenu();
        menuItemInsertTeacher = new javax.swing.JMenuItem();
        menuItemUpdateTeacher = new javax.swing.JMenuItem();
        menuItemDeleteTeacher = new javax.swing.JMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        bundle = java.util.ResourceBundle.getBundle("view/Bundle"); // NOI18N
        setTitle(bundle.getString("app.title")); // NOI18N

        panel.setBackground(new java.awt.Color(255, 255, 255));

        tabbedPane.addTab(bundle.getString("dictionary.student"), panelStudent); // NOI18N
        tabbedPane.addTab(bundle.getString("dictionary.teacher"), panelTeacher); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setBackground(new java.awt.Color(255, 255, 255));

        menuActions.setText(bundle.getString("dictionary.actions")); // NOI18N

        menuStudent.setText(bundle.getString("dictionary.student")); // NOI18N

        menuItemInsertStudent.setText(bundle.getString("dictionary.new")); // NOI18N
        menuItemInsertStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemInsertStudentActionPerformed(evt);
            }
        });
        menuStudent.add(menuItemInsertStudent);

        menuItemUpdateStudent.setText(bundle.getString("dictionary.edit")); // NOI18N
        menuItemUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUpdateStudentActionPerformed(evt);
            }
        });
        menuStudent.add(menuItemUpdateStudent);

        menuItemDeleteStudent.setText(bundle.getString("dictionary.delete")); // NOI18N
        menuItemDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDeleteStudentActionPerformed(evt);
            }
        });
        menuStudent.add(menuItemDeleteStudent);

        menuActions.add(menuStudent);

        menuTeacher.setText(bundle.getString("dictionary.teacher")); // NOI18N

        menuItemInsertTeacher.setText(bundle.getString("dictionary.new")); // NOI18N
        menuItemInsertTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemInsertTeacherActionPerformed(evt);
            }
        });
        menuTeacher.add(menuItemInsertTeacher);

        menuItemUpdateTeacher.setText(bundle.getString("dictionary.edit")); // NOI18N
        menuItemUpdateTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUpdateTeacherActionPerformed(evt);
            }
        });
        menuTeacher.add(menuItemUpdateTeacher);

        menuItemDeleteTeacher.setText(bundle.getString("dictionary.delete")); // NOI18N
        menuItemDeleteTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDeleteTeacherActionPerformed(evt);
            }
        });
        menuTeacher.add(menuItemDeleteTeacher);

        menuActions.add(menuTeacher);
        menuActions.add(separator);

        menuItemExit.setText(bundle.getString("dictionary.exit")); // NOI18N
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        menuActions.add(menuItemExit);

        menuBar.add(menuActions);

        menuHelp.setText(bundle.getString("dictionary.help")); // NOI18N

        menuItemAbout.setText(bundle.getString("dictionary.about")); // NOI18N
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemInsertStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemInsertStudentActionPerformed
        panelStudent.showDialog();
    }//GEN-LAST:event_menuItemInsertStudentActionPerformed

    private void menuItemUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUpdateStudentActionPerformed
        JTable target = panelStudent.getTable();
        int row = target.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, bundle.getString("app.warning.student.table"), this.getTitle(), JOptionPane.WARNING_MESSAGE);
        } else {
            String code = String.valueOf(target.getValueAt(row, 0));

            tabbedPane.setSelectedIndex(0);

            panelStudent.showDialog(row, code);
        }
    }//GEN-LAST:event_menuItemUpdateStudentActionPerformed

    private void menuItemDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDeleteStudentActionPerformed
        JTable target = panelStudent.getTable();
        int row = target.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, bundle.getString("app.warning.student.table"), this.getTitle(), JOptionPane.WARNING_MESSAGE);
        } else {
            String code = String.valueOf(target.getValueAt(row, 0));

            panelStudent.deleteRow(row, code);
        }
    }//GEN-LAST:event_menuItemDeleteStudentActionPerformed

    private void menuItemInsertTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemInsertTeacherActionPerformed
        panelTeacher.showDialog();
    }//GEN-LAST:event_menuItemInsertTeacherActionPerformed

    private void menuItemUpdateTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUpdateTeacherActionPerformed
        JTable target = panelTeacher.getTable();
        int row = target.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, bundle.getString("app.warning.teacher.table"), this.getTitle(), JOptionPane.WARNING_MESSAGE);
        } else {
            String code = String.valueOf(target.getValueAt(row, 0));

            tabbedPane.setSelectedIndex(1);

            panelTeacher.showDialog(row, code);
        }
    }//GEN-LAST:event_menuItemUpdateTeacherActionPerformed

    private void menuItemDeleteTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDeleteTeacherActionPerformed
        JTable target = panelTeacher.getTable();
        int row = target.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, bundle.getString("app.warning.teacher.table"), this.getTitle(), JOptionPane.WARNING_MESSAGE);
        } else {
            String code = String.valueOf(target.getValueAt(row, 0));

            panelTeacher.deleteRow(row, code);
        }
    }//GEN-LAST:event_menuItemDeleteTeacherActionPerformed

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        int i = JOptionPane.showConfirmDialog(this, bundle.getString("app.warning.exit"),
                this.getTitle(), JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_menuItemExitActionPerformed

    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAboutActionPerformed
        JDialogAbout dialog = new JDialogAbout(this);
        Utils.installEscapeCloseOperation(dialog);
        Utils.installEnterCloseOperation(dialog);
        dialog.setVisible(true);
    }//GEN-LAST:event_menuItemAboutActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu menuActions;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemDeleteStudent;
    private javax.swing.JMenuItem menuItemDeleteTeacher;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemInsertStudent;
    private javax.swing.JMenuItem menuItemInsertTeacher;
    private javax.swing.JMenuItem menuItemUpdateStudent;
    private javax.swing.JMenuItem menuItemUpdateTeacher;
    private javax.swing.JMenu menuStudent;
    private javax.swing.JMenu menuTeacher;
    private javax.swing.JPanel panel;
    private view.JPanelStudent panelStudent;
    private view.JPanelTeacher panelTeacher;
    private javax.swing.JPopupMenu.Separator separator;
    private javax.swing.JTabbedPane tabbedPane;
    private java.util.ResourceBundle bundle;
    // End of variables declaration//GEN-END:variables
}
